name: Android CI

on:
  push:
    branches-ignore:
      - 'main'
      - 'release'
  pull_request:
    branches:
      - 'release'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Create Google Service Account File
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Create upload key
        run: |
          # Base64でエンコードされたキーストアファイルをシークレットからでコードする
          echo ${{ secrets.KEYSTORE }} | base64 --decode > app/keystore.jks
          # シークレットからキーストア関連情報を読み取りlocal.propertiesに書き込む
          echo "keystore.file=keystore.jks" >> local.properties
          echo "keystore.storepwd=${{ secrets.STORE_PASSWORD }}" >> local.properties
          echo "keystore.alias=${{ secrets.KEY_ALIAS }}" >> local.properties
          echo "keystore.keypwd=${{ secrets.KEY_PASSWORD }}" >> local.properties

      - name: Unit Test & Coverage
        run: ./gradlew testDebugUnitTest jacocoTestReport
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: app/build/reports/jacoco/jacocoTestReportDebug

  ui-test:
    # releaseブランチに対するプルリクエストが作成されたときに実行する
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create Google Service Account File
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Create upload key
        run: |
          # Base64でエンコードされたキーストアファイルをシークレットからでコードする
          echo ${{ secrets.KEYSTORE }} | base64 --decode > keystore.jks
          # シークレットからキーストア関連情報を読み取りlocal.propertiesに書き込む
          echo "keystore.file=keystore.jks" >> local.properties
          echo "keystore.storepwd=${{ secrets.STORE_PASSWORD }}" >> local.properties
          echo "keystore.alias=${{ secrets.KEY_ALIAS }}" >> local.properties
          echo "keystore.keypwd=${{ secrets.KEY_PASSWORD }}" >> local.properties

      - name: Build Debug
        run: |
          # ビルド番号をパッチバージョンに指定してビルドする
          ./gradlew assembleDebug -PpatchVersion=${{ github.run_number }}
          mv app/build/outputs/apk/debug/*.apk app-debug.apk
          ./gradlew assembleAndroidTest -PpatchVersion=${{ github.run_number }}
          mv app/build/outputs/apk/androidTest/debug/*.apk app-debug-androidTest.apk

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'

      - name: UI test on Firebase TestLab
        run: |
          gcloud firebase test android run --type instrumentation --app app-debug.apk --test app-debug-androidTest.apk \
          --device model=panther,version=33,locale=en,orientation=portrait \
          --device model=oriole,version=31,locale=en,orientation=portrait \
          --device model=redfin,version=30,locale=en,orientation=portrait \
          --device model=a10,version=29,locale=en,orientation=portrait \
          --device model=Nexus5,version=21,locale=en,orientation=portrait

  release:
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'release' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Create Google Service Account File
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Create upload key
        run: |
          # Base64でエンコードされたキーストアファイルをシークレットからでコードする
          echo ${{ secrets.KEYSTORE }} | base64 --decode > keystore.jks
          # シークレットからキーストア関連情報を読み取りlocal.propertiesに書き込む
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> local.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> local.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> local.properties

      - name: Build Release
        run: |
          # ビルド番号からパッチバージョンを取得する
          ./gradlew bundleRelease --PpatchVersion=${{ github.run_number }}
          # 生成されたaabファイル名を環境変数に格納する
          echo "RELEASE_FILE=$(ls app/build/outputs/bundle/release/*.aab)" >> $GITHUB_ENV

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_CONSOLE_SERVICE_ACCOUNT }}
          packageName: net.wackwack.pic_card_memory
          releaseFiles: ${{ env.RELEASE_FILE }}
          track: internal